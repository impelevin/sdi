networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
#  mysql:
#    driver: ${VOLUMES_DRIVER}
#  postgres:
#    driver: ${VOLUMES_DRIVER}

services:
  ### NGINX Server #########################################
  nginx:
    build:
      context: ./runtimes/nginx
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ### PHP-FPM ##############################################
  php-fpm:
    build:
      context: ./runtimes/php-fpm
      args:
        - BASE_IMAGE_TAG_PREFIX=${PHP_FPM_BASE_IMAGE_TAG_PREFIX}
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        - IMAGEMAGICK_VERSION=${PHP_FPM_IMAGEMAGICK_VERSION}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - XDEBUG_PORT=${PHP_FPM_XDEBUG_PORT}
        - LOCALE=${PHP_FPM_DEFAULT_LOCALE}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./runtimes/php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    expose:
      - "9000"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_TLS_VERIFY=1
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_CERT_PATH=/certs/client
      - FAKETIME=${PHP_FPM_FAKETIME}
    depends_on:
      - app
    networks:
      - backend
      - frontend
    extra_hosts:
      - host.docker.internal:host-gateway

  ### Workspace ##################################
  app:
    build:
      context: ./runtimes/workspace
      args:
        - BASE_IMAGE_TAG_PREFIX=${WORKSPACE_BASE_IMAGE_TAG_PREFIX}
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - NPM_FETCH_RETRIES=${WORKSPACE_NPM_FETCH_RETRIES}
        - NPM_FETCH_RETRY_MINTIMEOUT=${WORKSPACE_NPM_FETCH_RETRY_MINTIMEOUT}
        - NPM_FETCH_RETRY_MAXTIMEOUT=${WORKSPACE_NPM_FETCH_RETRY_MAXTIMEOUT}
        - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
        - YARN_VERSION=${WORKSPACE_YARN_VERSION}
        - INSTALL_NPM_VUE_CLI=${WORKSPACE_INSTALL_NPM_VUE_CLI}
        - INSTALL_WP_CLI=${WORKSPACE_INSTALL_WP_CLI}
        - PUID=${WORKSPACE_PUID}
        - PGID=${WORKSPACE_PGID}
        - TZ=${WORKSPACE_TIMEZONE}
        - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
        - COMPOSER_VERSION=${WORKSPACE_COMPOSER_VERSION}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      ## todo: add php-worker
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
      - "${WORKSPACE_BROWSERSYNC_HOST_PORT}:3000"
      - "${WORKSPACE_BROWSERSYNC_UI_HOST_PORT}:3001"
      - "${WORKSPACE_VUE_CLI_SERVE_HOST_PORT}:8080"
      - "${WORKSPACE_VUE_CLI_UI_HOST_PORT}:8000"
      - "${WORKSPACE_VITE_PORT}:5173"
    tty: true
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    networks:
      - frontend
      - backend

  ### MySQL ################################################
#  mysql:
#    build:
#      context: ./runtimes/mysql
#      args:
#        - MYSQL_VERSION=${MYSQL_VERSION}
#    environment:
#      - MYSQL_DATABASE=${MYSQL_DATABASE}
#      - MYSQL_USER=${MYSQL_USER}
#      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - TZ=${WORKSPACE_TIMEZONE}
#    volumes:
#      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
#      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
#    ports:
#      - "${MYSQL_PORT}:3306"
#    networks:
#      - backend

  ### phpMyAdmin ###########################################
#  phpmyadmin:
#    build: ./runtimes/phpmyadmin
#    environment:
#      - PMA_ARBITRARY=1
#      - MYSQL_USER=${PMA_USER}
#      - MYSQL_PASSWORD=${PMA_PASSWORD}
#      - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
#      - MAX_EXECUTION_TIME=${PMA_MAX_EXECUTION_TIME}
#      - MEMORY_LIMIT=${PMA_MEMORY_LIMIT}
#      - UPLOAD_LIMIT=${PMA_UPLOAD_LIMIT}
#    ports:
#      - "${PMA_PORT}:80"
#    depends_on:
#      - "${PMA_DB_ENGINE}"
#    networks:
#      - frontend
#      - backend

  ### PostgreSQL ###########################################
#  postgres:
#    build:
#      context: ./runtimes/postgres
#      args:
#        - POSTGRES_VERSION=${POSTGRES_VERSION}
#    volumes:
#      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
#      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
#    ports:
#      - "${POSTGRES_PORT}:5432"
#    environment:
#      - POSTGRES_DB=${POSTGRES_DB}
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#    networks:
#      - backend