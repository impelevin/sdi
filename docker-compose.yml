version: "3"

services:
  nginx:
    image: nginx:alpine
    ports:
      - ${APP_PORT:-80}:80
    volumes:
      - ./src:/src
      - ./runtimes/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - appnetwork

  app:
    build:
      context: ./runtimes/php/8.1
      dockerfile: Dockerfile
      args:
          WWWGROUP: '${WWWGROUP:-1000}'
    environment:
      XDEBUG_MODE: '${XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${XDEBUG_CONFIG:-client_host=host.docker.internal}'
      WWWUSER: '${WWWUSER:-1000}'
    volumes:
      - ./src:/src
    working_dir: /src
    networks:
      - appnetwork

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD:-root}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    ports:
      - 3306:3306
    volumes:
      - appmysql:/var/lib/mysql
    networks:
      - appnetwork

  phpmyadmin:
    image: 'phpmyadmin:5.2'
    ports:
      - 8081:80
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD:-root}'
      UPLOAD_LIMIT: '1024M'
    links:
      - "mysql:db"
    depends_on:
      - mysql
    networks:
      - appnetwork

  redis:
    image: 'redis:alpine'
    ports:
        - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
        - appredis:/data
    networks:
        - appnetwork
    healthcheck:
        test: [ "CMD", "redis-cli", "ping" ]

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
        - '1025:1025'
        - '8025:8025'
    networks:
        - appnetwork

#Docker Networks
networks:
    appnetwork:
        driver: bridge
#Volumes
volumes:
  appmysql:
      driver: local
  appredis:
      driver: local
